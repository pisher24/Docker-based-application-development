name: CI/CD Pipeline with SBOM, Trivy, and SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # ------------------------------
  # 1. SonarCloud Code Analysis
  # ------------------------------
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #- name: Set up JDK 17  # If you use Java, adjust if needed
      #  uses: actions/setup-java@v4
      #  with:
      #    java-version: '17'
      #    distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}

  # ------------------------------
  # 2. Build, SBOM, and Trivy
  # ------------------------------
  build:
    runs-on: ubuntu-latest
    needs: sonarcloud   # Build only runs after SonarCloud passes

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build images using docker compose
      - name: Build Docker images
        run: docker compose build

      # Push Backend Image
      - name: Push Backend Image
        run: docker push pisher24/todo-backend:latest

      # Push Frontend Image
      - name: Push Frontend Image
        run: docker push pisher24/todo-frontend:latest

      # Generate SBOM for backend
      - name: Generate SBOM for backend
        uses: anchore/sbom-action@v0
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/todo-backend:latest
          format: cyclonedx-json
          output-file: sbom-backend.json

      # Generate SBOM for frontend
      - name: Generate SBOM for frontend
        uses: anchore/sbom-action@v0
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/todo-frontend:latest
          format: cyclonedx-json
          output-file: sbom-frontend.json

      # Install Trivy
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update -y
          sudo apt-get install -y trivy

      # Scan Backend SBOM
      - name: Scan Backend SBOM
        run: trivy sbom sbom-backend.json --severity CRITICAL,HIGH --exit-code 1

      # Scan Frontend SBOM
      - name: Scan Frontend SBOM
        run: trivy sbom sbom-frontend.json --severity CRITICAL,HIGH --exit-code 1

      # Upload SBOMs as workflow artifacts
      - name: Upload SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: |
            sbom-backend.json
            sbom-frontend.json
